#Demo workflow

workflow:
  name:  webpage-word-count
  version: "0.0.10"

  execution:
    constraint: same_executor  # other values: 'shared_fs', 'same_host'
    memory: 2g
    cpu: 1

  input:
    webpage_url:
      type: string
    words:
      type: array
      items:
        type: string

  output:
    counts: count@count


  tasks:
    download_webpage:
      tool: download_webpage
      input:
        url: webpage_url
      depends_on: null

    parallel_word_count:
      scatter:
        input:
          word:
            with_items: words  # this can be from output of a previous task, eg, files@previous_task
            task_suffix:   # Optional
      tasks:
        count:
          tool: word_counter  # optional, if omitted tool name will be the same as task name
          input:
            word: word
            file: file@download_webpage
          depends_on:
          - completed@download_webpage  # optional, let user define dependency explicitly, not really needed in this case


# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  download_webpage:
    command: |
      docker run hiromasaono/curl curl ${url} > abc.html \
        && echo "{\"file\": \"$(pwd)/abc.html\", \"_wf_name\": \"${_wf_name}\", \"_wf_version\": \"${_wf_version}\", \"_wf_id\": \"${_wf_id}\", \"_job_name\": \"${_job_name}\", \"_job_id\": \"${_job_id}\", \"_jt_exec_version\": \"${_jt_exec_version}\"}" \
        > output.json
    input:
      url:
        type: string
    output:
      file:
        type: string
        is_file: true

  word_counter:
    command: word_counter.py
    input:
      file:
        type: string
        is_file: true
      word:
        type: string
    output:
      word:
        type: string
      count:
        type: integer
